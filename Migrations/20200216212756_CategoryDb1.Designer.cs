// <auto-generated />
using System;
using CSC237_pmarshall_ProgrammingChallenge1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CSC237_pmarshall_ProgrammingChallenge1.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20200216212756_CategoryDb1")]
    partial class CategoryDb1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSC237_pmarshall_ProgrammingChallenge1.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Work"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Friend"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Family"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("CSC237_pmarshall_ProgrammingChallenge1.Models.Contact", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            CategoryId = 3,
                            DateAdded = new DateTime(2020, 2, 16, 14, 27, 56, 95, DateTimeKind.Local).AddTicks(6049),
                            Email = "james_marshall48@aol.com",
                            FirstName = "James",
                            LastName = "Marshall",
                            Organization = "Student",
                            Phone = "720-965-1963"
                        },
                        new
                        {
                            ContactId = 2,
                            CategoryId = 3,
                            DateAdded = new DateTime(2020, 2, 16, 14, 27, 56, 97, DateTimeKind.Local).AddTicks(7861),
                            Email = "philip.marshall123456789@gmail.com",
                            FirstName = "Philip",
                            LastName = "Marshall",
                            Organization = "Student",
                            Phone = "720-965-5459"
                        },
                        new
                        {
                            ContactId = 3,
                            CategoryId = 1,
                            DateAdded = new DateTime(2020, 2, 16, 14, 27, 56, 97, DateTimeKind.Local).AddTicks(7901),
                            Email = "keith.howard@whatever.com",
                            FirstName = "Keith",
                            LastName = "Howard",
                            Organization = "Teacher",
                            Phone = "777-777-7777"
                        });
                });

            modelBuilder.Entity("CSC237_pmarshall_ProgrammingChallenge1.Models.Contact", b =>
                {
                    b.HasOne("CSC237_pmarshall_ProgrammingChallenge1.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
